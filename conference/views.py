from django.http import HttpResponse, HttpResponseNotFound, Http404, HttpResponseBadRequest
from django.shortcuts import render, redirect, get_object_or_404
from django.templatetags.static import static


# Create your views here.

menu = [
    {'title': "Главная", 'url_name': 'authors'},
    {'title': "Добавить статью", 'url_name': 'add_page'},
    {'title': "Обратная связь", 'url_name': 'contact'},
    {'title': "Войти", 'url_name': 'login'}
]

#Список авторов статей []
authors = [
    {
        'id': 1,
        'middle_name': "Васильев",
        'first_name': "Ярослав",
        'last_name': "Матвеевич",
        'date_of_birth': "1997-09-13",
        'status': "Enabled",
        'country': "Россия",
        'city': "Ростов",
        'affiliation': "МГТУ им Н.Э. Баумана",            
        'biography': "Васильев Ярослав Матвеевич - выдающийся научный деятель, родился в маленьком городке на севере России. С самого детства проявлял необычайный интерес к наукам, особенно к физике и математике. В школе его учителя всегда были в восторге от его способностей и страсти к изучению нового.\r\n\r\nПосле окончания школы Васильев поступил в престижный университет, где продолжил свое образование в области естественных наук. Его работы и исследования привлекли внимание профессоров и коллег, и вскоре он стал одним из самых перспективных молодых ученых в своей области.\r\n\r\nОн специализируется на разработке новых моделей и теорий в физике, и его работы публикуются в престижных журналах и научных изданиях. Васильев Ярослав Матвеевич уже получил несколько престижных наград и стипендий за свои достижения в науке.",
        'image': static('conference/images/authors/yarik.png'),  # путь к изображению автора 
        'time_create': "2023-11-06T10:30:43.000394Z",
        'last_modified': "2023-11-06T10:30:43.000413Z"
    },
    {
        'id': 2,
        'middle_name': "Семенова",
        'first_name': "Арина",            
        'last_name': "Игоревна",
        'date_of_birth': "2000-09-03",
        'status': "Enabled",
        'country': "Россия",            
        'city': "Москва",
        'affiliation': "VK Company",
        'biography': "Маркина Арина Игоревна активно участвует в международных конференциях и научных форумах, где делится своими последними научными открытиями и идеями. Ее презентации всегда яркие и увлекательные, способные заинтересовать любую аудиторию.\r\n\r\nОна специализируется на исследовании новых материалов и их свойств, а также на разработке инновационных технологий. Ее научные статьи регулярно публикуются в научных журналах, где они вызывают оживленные дискуссии и интерес со стороны научного сообщества.\r\n\r\nКроме науки, Маркина любит путешествовать и открывать для себя новые культуры и обычаи. В свободное время она также занимается фотографией и живописью, находя в них вдохновение и отдых от научных исследований.",
        'image': static('conference/images/authors/arina.png'),  # путь к изображению автора 
        'time_create': "2023-11-06T10:31:44.790390Z",
        'last_modified': "2023-11-06T10:31:44.790410Z"
    },  
    {
        'id': 3,
        'middle_name': "Павлов",
        'first_name': "Никита",
        'last_name': "Егорович",
        'date_of_birth': "1980-12-25",
        'status': "Enabled",
        'country': "Россия",
        'city': "Ростов",
        'affiliation': "Sberbank Company",
        'biography': "Павлов Никита Егорович - неординарный исследователь, родившийся и выросший в маленьком сельском поселении в глубине России. С самого детства его глубокий интерес к природе и науке явился явным, и он всегда отличался креативностью и нетрадиционным мышлением.\r\n\r\nПосле окончания школы Павлов отправился в столицу, чтобы поступить в престижный университет и продолжить свои страстные исследования. Однако, вместо привычной научной специализации, Павлов был заинтересован в изучении параллельных вселенных и мультивселенной теории.\r\n\r\nОн проводил эксперименты, используя самодельные устройства и аккуратно записывал свои наблюдения. Его работы вызывали необычайный интерес у научного сообщества, и скоро его исследования стали исключительно известными.",
        'image': static('conference/images/authors/nikita.png'),  # путь к изображению автора 
        'time_create': "2023-11-06T10:32:24.217790Z",
        'last_modified': "2023-11-06T10:32:24.217810Z"
    }
]


#<!---------------------------------------------------------------------------------------------------------!>

def index(request):

    query = request.GET.get('search')
    AuthorsData = [author for author in authors if author['middle_name'] == query and author['status'] == 'Enabled'] if query else [author for author in authors if author['status'] == 'Enabled']


    context = {
        'menu': menu, 
        'authors': AuthorsData, 
        'title': 'Главная страница',
        'search_query': query if query else ""
    }
    
    return render(request, 'conference/index.html', context)


#<!---------------------------------------------------------------------------------------------------------!>

# get_author() - это функция, которая принимает идентификатор автора и возвращает запись автора из списка authors. Если автор не найден, будет выкинуто исключение Http404.
def get_author(author_id):
    try:
        author = next(author for author in authors if author['id'] == author_id)
    except StopIteration:
        raise Http404('Author not found')

    return author



#author() - это представление, которое получает запись автора используя функцию get_author() и передает его в шаблон author.html.
def author(request, id):

    author = get_author(id)

    context = {
        'author': author,
        'menu': menu, 
        'title': 'Информация об авторе', 
    }  

    return render(request, 'conference/author.html', context)


#<!---------------------------------------------------------------------------------------------------------!>

def about(request):
    return render(request, 'conference/about.html', {'menu': menu, 'title': 'О сайте'})


#<!---------------------------------------------------------------------------------------------------------!>

def pageNotFound(request, exception):
    return HttpResponseNotFound('<h1>Страница не найдена</h1>')


#<!---------------------------------------------------------------------------------------------------------!>

def addpage(request):
    return HttpResponse("Добавление статьи")


#<!---------------------------------------------------------------------------------------------------------!>

def contact(request):
    return HttpResponse("Обратная связь")


#<!---------------------------------------------------------------------------------------------------------!>

def login(request):
    return HttpResponse("Авторизация")
